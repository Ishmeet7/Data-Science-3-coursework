# -*- coding: utf-8 -*-
"""assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17aiAW9s8MBW6fzZ500easME3y2Pohpit
"""

import pandas as pd
import numpy as np
df = pd.read_csv (r'/content/drive/MyDrive/pima-indians-diabetes.csv')

list_of_attributes=list(df.columns)

list_of_attributes.remove('class')
print(list_of_attributes)

for attribute in list_of_attributes:
  calculated_mean=df[attribute].mean()
  print("mean of ",attribute,"is",calculated_mean)

  calculated_median=df[attribute].median()
  print("median of ",attribute,"is",calculated_median)

  calculated_mode=df[attribute].mode()
  print("mode of ",attribute,"is",calculated_mode)

  calculated_minimum=df[attribute].min()
  print("minimum of ",attribute,"is",calculated_minimum)

  calculated_maximum=df[attribute].max()
  print("maximum of ",attribute,"is",calculated_maximum)

  calculated_standard_deviation=df[attribute].std()
  print("standard deviation of ",attribute,"is",calculated_standard_deviation)

list2_of_attributes=list(df.columns)
list2_of_attributes.remove('class')
y=["Age","BMI"]
for attribute_new in y:
   list2_of_attributes.remove(attribute_new)

   for attribute in list2_of_attributes:
       print(np.corrcoef("attribute","attribute_new"))
       df.plot.scatter(x = attribute, y = attribute_new, title="scatter plot of "+str(attribute)+" vs. "+ str(attribute_new))
       correlation_coefficient=np.corrcoef(attribute_array,attribute_new_array)[0][1]
       print("The correlation coefficient of ",attribute,"with",attribute_new,"is ",correlation_coefficient)
preg_array=df["pregs"].to_numpy(na_value='0')
skin_array=df["skin"].to_numpy(na_value='0')
plt.hist(preg_array)
plt.title('Histogram of preg')
plt.hist(skin_array)
plt.title('Histogram of skin')
df_groupby_class=df.groupby("class")
df.groupby("class").hist("pregs")
for attribute in list_of_attributes_1:
  attribute_array=df[attribute].to_numpy(na_value='0')
  plt.figure()

  plt.boxplot(attribute_array)
  plt.title("boxplot of "+str(attribute))
